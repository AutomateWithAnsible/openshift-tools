#!/usr/bin/bash

host=$(hostname -s)
data=$(/usr/share/ansible/inventory/multi_inventory.py --refresh-cache 2>&1 1>/dev/null)

rsync_err_count=0
err_count=0

if [ -n "$data"  ]; then
  # Log stderr from multi_inventory account refresh
  echo "$(date "+%F %T") $data" >> /var/log/multi_inventory.log

  err_count=$(echo "$data" | wc -l)
fi

# rsync cache to targets (might be nothing here depending on host, expect only on bastion-nasa-1/2)
for target in {{ oo_rsync_cache_targets | join(' ') }};
do
    # target dir is not in /dev/shm so it's persistent (survive reboot on target host)
    /bin/rsync -e "ssh -i /root/.ssh/rsync_inventory_cache_key" {{ oo_inventory_cache_location }} {{ oo_rsync_cache_target_user }}@$target:{{ oo_rsync_cache_target_dir }}
    RESULT=$?
    if [ "$RESULT" != "0" ];
    then
        rsync_err_count=$((rsync_err_count+1))
    fi
done

# rsync only inventory hosts with "oo_cluster_tier: rhmi"
TMPFILE=$(mktemp)
/usr/bin/jq '._meta.hostvars | with_entries(select(.value.oo_cluster_tier == "rhmi")) | {_meta: {hostvars: .}}' {{ oo_inventory_cache_location }} > $TMPFILE
for target in {{ oo_rsync_cache_targets_rhmi_only | join(' ') }}
do
    # The RHMI targets will put the rsync user in a chroot jail,
    # so just deposit the inventory file in the login directory.
    /bin/rsync -e "ssh -i /root/.ssh/rsync_inventory_cache_key" $TMPFILE {{ oo_rsync_cache_target_user }}@$target:{{ oo_rsync_cache_target_dir }}/{{ g_oai_cache_location | basename }}
    RESULT=$?
    if [ "$RESULT" != "0" ];
    then
        rsync_err_count=$((rsync_err_count+1))
    fi
done
rm $TMPFILE

# Send metrics
ops-metric-client -s $host -k multi_inventory.account.refresh -o $err_count
#ops-metric-client -s $host -k multi_inventory.account.refresh.rsync -o $rsync_err_count
